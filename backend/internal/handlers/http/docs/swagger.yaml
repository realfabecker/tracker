definitions:
  EmptyResponseDTO:
    properties:
      code:
        example: 200
        type: integer
      message:
        example: Operação realizada com sucesso
        type: string
      status:
        example: success
        type: string
    type: object
  PagedDTO-Payment:
    properties:
      has_more:
        example: false
        type: boolean
      items:
        items:
          $ref: '#/definitions/Payment'
        type: array
      page_count:
        example: 10
        type: integer
      page_token:
        type: string
    type: object
  Payment:
    description: Payment information
    properties:
      createdAt:
        example: "2023-04-07T16:45:30Z"
        type: string
      description:
        example: Supermercado
        type: string
      dueDate:
        example: "2023-05-07"
        type: string
      id:
        example: 2023050701GXEH91YBVV40C1FK50S1P0KC
        type: string
      status:
        allOf:
        - $ref: '#/definitions/PaymentStatus'
        enum:
        - paid
        - cancelled
        - pending
        example: paid
      userId:
        example: realfabecker@gmail
        type: string
      value:
        example: 200
        minimum: 1
        type: number
    required:
    - description
    - dueDate
    - id
    - userId
    - value
    type: object
  PaymentStatus:
    enum:
    - paid
    - pending
    - cancelled
    type: string
    x-enum-varnames:
    - PaymentPaid
    - PaymentPending
    - PaymentCancelled
  ResponseDTO-PagedDTO-Payment:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/PagedDTO-Payment'
      message:
        example: Operação realizada com sucesso
        type: string
      status:
        example: success
        type: string
    type: object
  ResponseDTO-Payment:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/Payment'
      message:
        example: Operação realizada com sucesso
        type: string
      status:
        example: success
        type: string
    type: object
  ResponseDTO-User:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/User'
      message:
        example: Operação realizada com sucesso
        type: string
      status:
        example: success
        type: string
    type: object
  ResponseDTO-UserToken:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/UserToken'
      message:
        example: Operação realizada com sucesso
        type: string
      status:
        example: success
        type: string
    type: object
  User:
    description: User information
    properties:
      id:
        example: realfabecker@gmail.com
        type: string
      name:
        example: Rafael Becker
        type: string
    type: object
  UserToken:
    properties:
      AccessToken:
        type: string
      RefreshToken:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    get:
      description: Get user login by e-mail
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseDTO-UserToken'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get user login by e-mail
      tags:
      - Auth
  /users/profile:
    get:
      description: Get user information by e-mail
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseDTO-User'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get user by e-mail
      tags:
      - Users
  /wallet/payments:
    get:
      description: List user payments
      parameters:
      - description: Number of records
        in: query
        name: limit
        required: true
        type: number
      - description: Pagination token
        in: query
        name: page_token
        type: string
      - description: Payment due date
        in: query
        name: due_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseDTO-PagedDTO-Payment'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: List user payments
      tags:
      - Payments
    post:
      description: Create a new payment record
      parameters:
      - description: Payment payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Payment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseDTO-Payment'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create a payment
      tags:
      - Payments
    put:
      description: Update/Create a payment record
      parameters:
      - description: Payment id
        in: path
        name: id
        required: true
        type: string
      - description: Payment payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Payment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseDTO-Payment'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Put a payment
      tags:
      - Payments
  /wallet/payments/{id}:
    delete:
      description: Delete payment
      parameters:
      - description: Payment id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EmptyResponseDTO'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete payment
      tags:
      - Payments
    get:
      description: Get payment by id
      parameters:
      - description: Payment id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResponseDTO-Payment'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get payment by id
      tags:
      - Payments
swagger: "2.0"
