// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/change": {
            "get": {
                "description": "Change user password",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "description": "Login payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WalletLoginChangeDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseDTO-UserToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/login": {
            "get": {
                "description": "Get user login by e-mail",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Get user login by e-mail",
                "parameters": [
                    {
                        "description": "Login payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WalletLoginDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseDTO-UserToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List user transactions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "List user transactions",
                "parameters": [
                    {
                        "type": "number",
                        "description": "Number of records",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pagination token",
                        "name": "page_token",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Payment due date",
                        "name": "due_date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseDTO-PagedDTO-Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update/Create a transaction record",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Put a transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payment payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Payment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseDTO-Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new transaction record",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Create a transaction",
                "parameters": [
                    {
                        "description": "Payment payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Payment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseDTO-Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/transactions/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get transaction by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseDTO-Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete transaction",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Delete transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EmptyResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/transactions/{id}/detail": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new transaction detail record",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Create a transaction detail",
                "parameters": [
                    {
                        "description": "TransactionDetail payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TransactionDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseDTO-TransactionDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/transactions/{id}/details": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List transaction details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "List transaction details",
                "parameters": [
                    {
                        "type": "number",
                        "description": "Number of records",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pagination token",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseDTO-PagedDTO-TransactionDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/transactions/{transactionId}/details/{detailId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get transaction detail by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transaction detail by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction id",
                        "name": "transactionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Detail id",
                        "name": "detailId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseDTO-TransactionDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user information by e-mail",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user by e-mail",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseDTO-User"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "EmptyResponseDTO": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "Operação realizada com sucesso"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "PagedDTO-Payment": {
            "type": "object",
            "properties": {
                "has_more": {
                    "type": "boolean",
                    "example": false
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Payment"
                    }
                },
                "page_count": {
                    "type": "integer",
                    "example": 10
                },
                "page_token": {
                    "type": "string"
                }
            }
        },
        "PagedDTO-TransactionDetail": {
            "type": "object",
            "properties": {
                "has_more": {
                    "type": "boolean",
                    "example": false
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TransactionDetail"
                    }
                },
                "page_count": {
                    "type": "integer",
                    "example": 10
                },
                "page_token": {
                    "type": "string"
                }
            }
        },
        "Payment": {
            "description": "Payment information",
            "type": "object",
            "required": [
                "description",
                "dueDate",
                "id",
                "title",
                "userId",
                "value"
            ],
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2023-04-07T16:45:30Z"
                },
                "description": {
                    "type": "string",
                    "example": "Supermercado"
                },
                "dueDate": {
                    "type": "string",
                    "example": "2023-05-07"
                },
                "id": {
                    "type": "string",
                    "example": "2023050701GXEH91YBVV40C1FK50S1P0KC"
                },
                "status": {
                    "enum": [
                        "paid",
                        "cancelled",
                        "pending"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/PaymentStatus"
                        }
                    ],
                    "example": "paid"
                },
                "title": {
                    "type": "string",
                    "example": "Supermercado"
                },
                "type": {
                    "enum": [
                        "expense",
                        "income",
                        "invoice",
                        "detail"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/PaymentType"
                        }
                    ],
                    "example": "expense"
                },
                "userId": {
                    "type": "string",
                    "example": "realfabecker@gmail"
                },
                "value": {
                    "type": "number",
                    "minimum": 1,
                    "example": 200
                }
            }
        },
        "PaymentStatus": {
            "type": "string",
            "enum": [
                "paid",
                "pending",
                "cancelled"
            ],
            "x-enum-varnames": [
                "PaymentPaid",
                "PaymentPending",
                "PaymentCancelled"
            ]
        },
        "PaymentType": {
            "type": "string",
            "enum": [
                "expense",
                "income"
            ],
            "x-enum-varnames": [
                "PaymentTypeExpense",
                "PaymentTypeIncome"
            ]
        },
        "ResponseDTO-PagedDTO-Payment": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/PagedDTO-Payment"
                },
                "message": {
                    "type": "string",
                    "example": "Operação realizada com sucesso"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "ResponseDTO-PagedDTO-TransactionDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/PagedDTO-TransactionDetail"
                },
                "message": {
                    "type": "string",
                    "example": "Operação realizada com sucesso"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "ResponseDTO-Payment": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/Payment"
                },
                "message": {
                    "type": "string",
                    "example": "Operação realizada com sucesso"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "ResponseDTO-TransactionDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/TransactionDetail"
                },
                "message": {
                    "type": "string",
                    "example": "Operação realizada com sucesso"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "ResponseDTO-User": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/User"
                },
                "message": {
                    "type": "string",
                    "example": "Operação realizada com sucesso"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "ResponseDTO-UserToken": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/UserToken"
                },
                "message": {
                    "type": "string",
                    "example": "Operação realizada com sucesso"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "TransactionDetail": {
            "description": "Invoice Detail information",
            "type": "object",
            "required": [
                "description",
                "title",
                "transactionId",
                "userId",
                "value"
            ],
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2023-04-07T16:45:30Z"
                },
                "description": {
                    "type": "string",
                    "example": "Supermercado"
                },
                "id": {
                    "type": "string",
                    "example": "2023050701GXEH91YBVV40C1FK50S1P0KC"
                },
                "title": {
                    "type": "string",
                    "example": "Supermercado"
                },
                "transactionId": {
                    "type": "string",
                    "example": "2023050701GXEH91YBVV40C1FK50S1P0XD"
                },
                "userId": {
                    "type": "string",
                    "example": "realfabecker@gmail"
                },
                "value": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 200
                }
            }
        },
        "User": {
            "description": "User information",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "realfabecker@gmail.com"
                },
                "name": {
                    "type": "string",
                    "example": "Rafael Becker"
                }
            }
        },
        "UserToken": {
            "type": "object",
            "properties": {
                "AccessToken": {
                    "type": "string"
                },
                "AuthChallange": {
                    "type": "string"
                },
                "AuthSession": {
                    "type": "string"
                },
                "RefreshToken": {
                    "type": "string"
                }
            }
        },
        "WalletLoginChangeDTO": {
            "type": "object",
            "required": [
                "email",
                "new_password",
                "session"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string",
                    "minLength": 6
                },
                "session": {
                    "type": "string"
                }
            }
        },
        "WalletLoginDTO": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Type 'Bearer ' and than your API token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/wallet",
	Schemes:          []string{},
	Title:            "Wallet Rest API",
	Description:      "Wallet Rest API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
